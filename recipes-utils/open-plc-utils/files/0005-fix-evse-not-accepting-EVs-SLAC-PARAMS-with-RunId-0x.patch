From 2e7734d9b3f150e162eaad5b55bed15bdda21d84 Mon Sep 17 00:00:00 2001
From: Michael Vassernis <michael.vassernis@tandemg.com>
Date: Wed, 13 Jul 2022 10:21:51 +0300
Subject: [PATCH] fix evse not accepting EVs SLAC PARAMS with RunId 0x00s

Signed-off-by: Michael Vassernis <michael.vassernis@tandemg.com>
---
 slac/evse.c               | 3 +++
 slac/evse_cm_slac_param.c | 4 +++-
 slac/slac.h               | 1 +
 3 files changed, 7 insertions(+), 1 deletion(-)

diff --git a/slac/evse.c b/slac/evse.c
index 7c4dffab..656ca8dc 100644
--- a/slac/evse.c
+++ b/slac/evse.c
@@ -284,6 +284,7 @@ static void UnoccupiedState (struct session * session, struct channel * channel,
 	{
 		memset(session->PEV_MAC, 0, sizeof(session->PEV_MAC));
 		memset(session->RunID, 0, sizeof(session->RunID));
+		session->slac_in_progress = false;
 		pthread_mutex_lock(&print_lock);
 		if (match_received)
 		{
@@ -414,6 +415,7 @@ static void * EvseStateMachineThread(void * arg)
 		{
 			memset(sessions[i].PEV_MAC, 0, sizeof(sessions[i].PEV_MAC));
 			memset(sessions[i].RunID, 0, sizeof(sessions[i].RunID));
+			sessions[i].slac_in_progress = false;
 			pthread_mutex_lock(&match_lock);
 			if (match_received)
 			{
@@ -451,6 +453,7 @@ static void * EvseStateMachineThread(void * arg)
 			channels[i].capture = 0;
 			while (readpacket (& channels[i], & messages[i], sizeof (messages[i])) > 0);
 			channels[i].capture = CHANNEL_TIMEOUT;
+			sessions[i].slac_in_progress = false;
 			pthread_mutex_lock(&match_lock);
 			match_received = false;
 			pthread_cond_broadcast(&match_cond);
diff --git a/slac/evse_cm_slac_param.c b/slac/evse_cm_slac_param.c
index 77ccd7e3..94229d24 100644
--- a/slac/evse_cm_slac_param.c
+++ b/slac/evse_cm_slac_param.c
@@ -115,7 +115,8 @@ signed evse_cm_slac_param (struct session * session, struct channel * channel, s
 		do
 		{
 			if (((! memcmp(session_tmp->PEV_MAC, request->ethernet.OSA, sizeof(session_tmp->PEV_MAC))) ||
-				 (! memcmp(session_tmp->RunID, request->RunID, sizeof(session_tmp->RunID)))))
+				 (! memcmp(session_tmp->RunID, request->RunID, sizeof(session_tmp->RunID)))) &&
+				(session_tmp->slac_in_progress == true))
 			{
 				ev_taken = 1;
 				break;
@@ -134,6 +135,7 @@ signed evse_cm_slac_param (struct session * session, struct channel * channel, s
 		memcpy (session->PEV_MAC, request->ethernet.OSA, sizeof (session->PEV_MAC));
 		memcpy (session->FORWARDING_STA, request->ethernet.OSA, sizeof (session->FORWARDING_STA));
 		memcpy (session->RunID, request->RunID, sizeof (session->RunID));
+		session_tmp->slac_in_progress = true;
 		pthread_mutex_unlock(&slac_lock);
 
 #if SLAC_DEBUG
diff --git a/slac/slac.h b/slac/slac.h
index 3121bedc..9ddd9695 100644
--- a/slac/slac.h
+++ b/slac/slac.h
@@ -173,6 +173,7 @@ typedef struct __packed session
 	unsigned settletime;
 	unsigned counter;
 	unsigned flags;
+	unsigned slac_in_progress;
 	signed exit;
 }
 
-- 
2.25.1

